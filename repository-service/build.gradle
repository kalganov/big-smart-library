dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-data-mongodb'
    )

    testImplementation(
            'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    )
}

application {
    mainClassName = 'leti.project.storage.StorageApplicationKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'leti.project.storage.StorageApplicationKt'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

def dockerBuildDir = 'build/docker/'
def exposedPort = '10001'
def jarName = 'repository-service'

task createDockerfile(type: Dockerfile) {
    destFile = project.file("$dockerBuildDir/Dockerfile")
    from 'openjdk:8-jre-alpine'
    copyFile jar.archiveName, "/app/$jarName" + '.jar'
    exposePort exposedPort as int
    entryPoint 'java', '-jar', "/app/$jarName" + '.jar'
    runCommand 'apk --update --no-cache add curl'
}

task syncJar(type: Copy) {
    dependsOn assemble
    from jar.archivePath
    into dockerBuildDir
}

task prepareDocker {
    dependsOn createDockerfile, syncJar
}