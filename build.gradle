plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.61' apply false
    id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '4.8.0'
}

group 'org.leti'
version '1.0-SNAPSHOT'

subprojects {

    apply plugin: 'application'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.bmuschko.docker-remote-api'

    ext['springCloudVersion'] = 'Hoxton.SR1'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    buildscript {
        repositories {
            jcenter()
        }

        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
        }
    }

    dependencies {
        implementation(
                'org.jetbrains.kotlin:kotlin-reflect',
                'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
                'org.springframework.boot:spring-boot-starter-web',
                'org.springframework.boot:spring-boot-starter-actuator',
                'com.fasterxml.jackson.module:jackson-module-kotlin'
        )

        if (project.name != "discovery-service") {
            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        }

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
}

task prepareDockerAll {
    dependsOn ':repository-service:prepareDocker',':discovery-service:prepareDocker'
}

