version: '3.7'
services:
  zookeeper:
    container_name: zk
    image: zookeeper:latest
    healthcheck:
      test: ["CMD", "bash", "-c", "[[ \"$$(exec 3<>/dev/tcp/localhost/2181 && echo ruok >&3 && cat <&3)\" == 'imok' ]] && exit 0 || exit 1"]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 10
    restart: always
    networks:
      - kafka-network
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    restart: always
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    ports:
      - 9093:9093
    environment:
      HOSTNAME_COMMAND: "echo kafka"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      BROKER_ID_COMMAND: "echo 1"
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        storage.entity:4:1
  eureka:
    build: ./discovery-service/build/docker
    container_name: discovery
    image: discovery-image:latest
    networks:
      - eureka-network
    restart: always
    ports:
      - 8761:8761
  mongo:
    container_name: mongodb
    ports:
      - 27017:27017
    networks:
      - mongo-network
    image: mongo:latest
    restart: always
  mongo-express:
    container_name: mongo-client
    image: mongo-express:latest
    restart: always
    networks:
      - mongo-network
    ports:
      - 8081:8081
  storage:
    depends_on:
      - eureka
      - mongo
      - kafka
    build: ./repository-service/build/docker
    container_name: storage
    image: storage-image:latest
    links:
      - mongo
      - eureka
      - kafka
    networks:
      - mongo-network
      - eureka-network
      - kafka-network
    restart: always
    ports:
      - 10001:10001

  es:
    container_name: elasticsearch
    image: elasticsearch:7.5.2
    networks:
      - es-network
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: >-
        -Xmx512m -Xms512m
      discovery.type: single-node
  search:
    depends_on:
      - es
      - eureka
      - kafka
      - storage
    build: ./search-service/build/docker
    container_name: search
    image: search-image:latest
    links:
      - es
      - eureka
      - kafka
    networks:
      - es-network
      - eureka-network
      - kafka-network
    restart: always
    ports:
      - 10002:10002
  front-end:
    image: romankalganov1/smart-library-frontend:latest
    depends_on:
      - search
      - storage
    ports:
      - 3000:3000

networks:
  kafka-network:
  mongo-network:
  eureka-network:
  es-network:
